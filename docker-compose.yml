version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: email-server-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - email-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  email-server:
    build: .
    container_name: python-email-server
    ports:
      - "5000:5000"
    environment:
      # SMTP Configuration
      - MAIL_SERVER=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_USE_TLS=True
      - MAIL_USE_SSL=False
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      # Note: Sender information is now passed in the request (sender_name and sender_email)
      
      # Flask Configuration
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      
      # API Security
      - API_KEY=${API_KEY}
      
      # Rate Limiting with Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - RATE_LIMIT=${RATE_LIMIT:-10}
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - email-network

volumes:
  redis_data:

networks:
  email-network:
    driver: bridge
